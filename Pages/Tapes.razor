@page "/tapes"
@inject HttpClient _client

<h3>Tapes</h3>
@if (Globals.ValidatedUser)
{
    <ul>
    @foreach (var tape in _tapes)
    {
        <li>
                <a href="@tape.URLofVideo" target="_blank"> @tape.Description</a> @tape.Title, @tape.Author
        </li>
    }
    </ul>
} else
{
    <h4>You need to sign in before you can see the tapes.</h4>
}


@code {

    public string message = "";
    public string errorMessage = "";

    public List<Tape> _tapes = new List<Tape>();

    protected override async Task OnInitializedAsync()
    {
        if (Globals.ValidatedUser)
        {
            try
            {
                await ReadTapesCSV();
            }
            catch (Exception ex)
            {
                errorMessage = ex.Message.ToString();
            }
        }
        this.StateHasChanged();
    }

    protected async Task ReadTapesCSV()
    {
        List<string> _tape_lines = new List<string>();

        // CW Webmaster / My Drive / WebSiteAttachments / Memberslists / Tapes List
        // https://drive.google.com/drive/folders/15OGqNYdpWHk8sGsuMhy7t-8aDXh9Gy-T
        string _urlToTapesCSV = "https://docs.google.com/spreadsheets/d/1StV1vVbnV56Nd56Pdx-RGAB-HoWzo69PIOLsZOGHG5A/export?format=csv";

        HttpResponseMessage response = await _client.GetAsync(_urlToTapesCSV);

        string stringOfMembers = await response.Content.ReadAsStringAsync();

        _tape_lines = stringOfMembers.Split("\n").ToList();

        foreach (var item in _tape_lines)
        {
            List<string> _fields = item.Split(",").ToList();
            Tape _tape = new Tape();
            _tape.Title = _fields[0];
            _tape.Description = _fields[1];
            _tape.Author = _fields[2];
            _tape.URLofVideo = _fields[3];

            _tapes.Add(_tape);
        }
        
        this.StateHasChanged();
    }



}
